@startuml
skinparam componentStyle uml1

package "gm::document" as doc {
    interface "Facade" as docf{
        + void Initialize()
        + void Save()
        + void SaveAs(location: Path)
        + void Load(location: Path)
        + void AttachDocPropChangeSub(sub: DocumentPropertyChangeSubscriber)
        + DocumentPropertyChangeSubscriber PropChangeSub()
    }

    enum "PropertyChange" as docpc {
        SetValue(DocumentProperty)
        CreateRegion(TODO)
        RemoveRegion(TODO)
    }

    enum "DocumentProperty" as docp {
        Font(TODO)
        SourceImage(BitMap)
        SourceText(String)
        OutputScale(f32)
        RegionProperty(TODO, RegionProperty)
    }

    enum "RegionProperty" as docrp {
        PathDilationMask(BitMap)
        GlyphPathKernel(BitMap)
        GutterLineHeight(f32)
        LineHeight(usize)
        GlyphKerning(f32)
        GlyphMinimumSize(f32)
        GlyphMaximumSize(f32)
        DensitySampleSize(f32)
        GlyphRotationSampleSize(f32)
        PathGenerationScale(f32)
    }

    interface "PropertyChangePublisher" as docpcp
    interface "PropertyChangeSubscriber" as docpcs
    interface "PropertyChangeVisitor" as docpcv
    interface "PersistenceWorker" as docpw {
        + Load(location: Path)
        + SaveAs(location: Path)
        + Save()
    }

    struct "SimpleFacadeFactory" as docsff {
        + Facade create_facade()
    }
    struct "SimpleFacade" as docsf {
        - persist_worker: PersistenceWorker
    }

    struct "DocumentBitmapSerializer" as docbmpser

    package "persistence" as docpers{
        package "file_system" as docperfs {
            struct "PersistenceWorker" as docperfspw
        }

        package "local_storage" as docperls {
            struct "PersistenceWorker" as docperlspw
        }
    }
}

package "roopes"  as roopes {
    package "patterns::publisher_subscriber" as rps {
        interface "MutablePublisher" as rmpsp
        interface "Subscriber" as rpss

        package "vec_publisher" as rpsvp {
            struct "VecPublisher" as rpsvpvp
        }
    }

    package "derive::visitor" as rv {
        interface "Visitor" as rvv
    }
}

package "web_sys" as ws {

    struct "Storage" as wss
}

package "sqlite" as sql {
    struct "Connection" as sqlc
}

docpc -l-> docp

docp -l-> docrp

docf --> docpcs

docsf ..|> docf
docsf --* docpw

docsff --> docsf
docsff --> docf
docsff --> docperfspw
docsff --> docperlspw

docpcs --|> rpss
docpcs --> docpc

docpw --|> docpcp
docpw --|> docpcv
docpw --|> docpcs

docpcp -d[hidden]- docpcv
docpcv -d[hidden]- docpcs

docpcp --|> rmpsp
docpcp --> docpc

docpcv --|> rvv
docpcv --> docpc

docperlspw ..|> docpw
docperlspw -r--* wss
docperlspw --* docbmpser

docperfspw ..|> docpw
docperfspw -r--* sqlc
docperfspw --* docbmpser

doc -r[hidden]- ws
ws  -d[hidden]- sql

@enduml