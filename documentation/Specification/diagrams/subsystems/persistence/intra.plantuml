@startuml intra
skinparam componentStyle uml1

package "gm" {
    package "ui" as ui {
        interface "PropertyChangeSubscriber" as uipcs
        interface "PropertyChangePublisher" as uipcp
    }

    package "persistence" as per {
        interface "Facade" as perf{
            + SaveHandler get_save_handler()
            + LoadHandler get_load_handler()
            + PersistedValueEventVisitor get_persisted_value_event_listener()
        }

        struct "PersistenceWorker" as perpw {}

        interface "SaveHandler" as persh {
            + void Save()
        }

        struct "SimpleLoadHandler" as perslh
        interface "LoadHandler" as perlh {
            + void Load(location: Path)
        }

        struct "SimpleFacadeFactory" as persff {
            + Facade create_facade()
        }

        struct "SimpleFacade" as persf {
            - PersistenceWorker worker
        }

        struct "SimpleValueEventVisitor" as perspvev {}
        interface "PersistedValueEventVisitor" as perpvev {}
        enum "PersistedValueEvent" as perpve {
            SetValue(PersistedValue)
            CreateRegion(TODO)
            RemoveRegion(TODO)
            SetSaveLocation(String)
        }

        struct "SimplePersistedValueVisitor" as perspvv {}
        interface "PersistedValueVisitor" as perpvv {}
        enum "PersistedValue" as perpv {
            Font(TODO)
            SourceImage(BitMap)
            SourceText(String)
            OutputScale(f32)
            RegionValue(TODO, RegionValue)
        }

        struct "SimpleRegionValueVisitor" as persrvv {}
        interface "RegionValueVisitor" as perrvv {}
        enum "RegionValue" as perrv {
            PathDilationMask(BitMap)
            GlyphPathKernel(BitMap)
            GutterLineHeight(f32)
            LineHeight(usize)
            GlyphKerning(f32)
            GlyphMinimumSize(f32)
            GlyphMaximumSize(f32)
            DensitySampleSize(f32)
            GlyphRotationSampleSize(f32)
            PathGenerationScale(f32)
        }
    }
}

package "unqlite" as unq {
    struct "UnQLite" as unqunq
}

perpvev --> perpve
perpve --> perpv

perpvv --> perpv
perpv --> perrv

perrvv --> perrv


persff --> perf
persff --> persf
persff --> perpw

persf ..|> perf
persf --* perpw
perf --|> uipcp
perf --|> uipcs

perpw --|> persh
perpw --|> perlh
perpw --* unqunq

@enduml